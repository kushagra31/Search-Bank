{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _app = _interopRequireDefault(require(\"app/app\"));\n\nvar _app2 = require(\"./app.json\");\n\nif (!window.Intl) {\n  new Promise(function (resolve) {\n    resolve(import('intl'));\n  }).then(function () {\n    return Promise.all([import('intl/locale-data/jsonp/en.js')]);\n  }).then(function () {\n    return _reactNative.AppRegistry.registerComponent(_app2.name, function () {\n      return _app.default;\n    });\n  }).catch(function (err) {\n    throw err;\n  });\n} else {\n  _reactNative.AppRegistry.registerComponent(_app2.name, function () {\n    return _app.default;\n  });\n}\n\nvar _default = _app.default;\nexports.default = _default;",
  "map": {
    "version": 3,
    "sources": ["D:/React Native Projects/react-native-template/App.js"],
    "names": [
      "window",
      "Intl",
      "Promise",
      "resolve",
      "then",
      "all",
      "AppRegistry",
      "registerComponent",
      "appName",
      "App",
      "catch",
      "err"
    ],
    "mappings": ";;;;;;;AAIA;;AACA;;AACA;;AAEA,IAAI,CAACA,MAAM,CAACC,IAAZ,EAAkB;AAChB,MAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrBA,IAAAA,OAAO,CAAC,OAAO,MAAP,CAAD,CAAP;AACD,GAFD,EAGGC,IAHH,CAGQ;AAAA,WAAMF,OAAO,CAACG,GAAR,CAAY,CAAC,OAAO,8BAAP,CAAD,CAAZ,CAAN;AAAA,GAHR,EAIGD,IAJH,CAIQ;AAAA,WAAME,yBAAYC,iBAAZ,CAA8BC,UAA9B,EAAuC;AAAA,aAAMC,YAAN;AAAA,KAAvC,CAAN;AAAA,GAJR,EAKGC,KALH,CAKS,UAAAC,GAAG,EAAI;AACZ,UAAMA,GAAN;AACD,GAPH;AAQD,CATD,MASO;AACLL,2BAAYC,iBAAZ,CAA8BC,UAA9B,EAAuC;AAAA,WAAMC,YAAN;AAAA,GAAvC;AACD;;eAEcA,Y",
    "sourcesContent": [
      "/**\n * @format\n */\n\nimport { AppRegistry } from 'react-native';\nimport App from 'app/app';\nimport { name as appName } from './app.json';\n\nif (!window.Intl) {\n  new Promise(resolve => {\n    resolve(import('intl'));\n  })\n    .then(() => Promise.all([import('intl/locale-data/jsonp/en.js')]))\n    .then(() => AppRegistry.registerComponent(appName, () => App))\n    .catch(err => {\n      throw err;\n    });\n} else {\n  AppRegistry.registerComponent(appName, () => App);\n}\n\nexport default App;\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
